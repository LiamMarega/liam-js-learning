---

---

<div class="taskbar">
  <div class="start-button"><img src="/windows-logo.svg" /> start</div>

  <!-- <div class="opened-tabs">
        <div class="open-tab" onclick="window.open('https://faisalakhtar.github.io/')"><img src="assets/documents.png"> Faisal Akhtar</div>
        <div class="open-tab" onclick="window.open('https://github.com/faisalAkhtar/')"><img src="assets/computer.png"> My Computer</div>
        <div class="open-tab" onclick="window.open('https://twitter.com/faisallakhtarr/')"><img src="assets/network.png"> My Network</div>
        <div class="open-tab readme active"><img src="assets/notepad.png"> ReadME.txt</div>
    </div> -->

  <div class="time">11:20 PM</div>
</div>

<style>
  .icon {
    width: 100px;
    cursor: pointer;
    margin: 8px 0;
    padding: 5px;
    border: 1px solid transparent;

    -webkit-user-select: none;
    -moz-user-select: -moz-none;
    -ms-user-select: none;
    user-select: none;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }

  .icon img {
    width: 54px;
    display: block;
    margin: 0 auto;
  }

  .icon .icon-name {
    font-family: calibri, monospace;
    font-size: 14px;
    line-height: 20px;
    height: 20px;
    width: 90px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    text-align: center;
  }

  .icon::selection {
    background-color: transparent;
  }

  .icon::-moz-selection {
    background-color: transparent;
  }

  .selected {
    background-color: #99d1ff99;
    border-color: #99d1ff;
  }

  .recycle-bin {
    position: absolute;
    right: 8px;
    bottom: 16px;
  }

  .window {
    z-index: 1;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-width: 500px;
    max-height: 400px;
    width: calc(100% - 50px);
    height: calc(100% - 100px);

    box-shadow:
      inset -1px -1px #00138c,
      inset 1px 1px #0831d9,
      inset -2px -2px #001ea0,
      inset 2px 2px #166aee,
      inset -3px -3px #003bda,
      inset 3px 3px #0855dd;
    border-top-left-radius: 8px;
    border-top-right-radius: 8px;
    padding: 0 0 3px;
    background: #ffffff;

    transition-duration: 0.1s;
  }

  .window.maximized {
    top: 0;
    left: 0;
    transform: none;
    width: 100%;
    height: calc(100% - 32px);
    max-width: unset;
    max-height: unset;
  }

  .window.minimized {
    top: 100%;
    height: 0;
    width: 0;
  }

  .title-bar {
    background: linear-gradient(
      180deg,
      #0997ff,
      #0053ee 8%,
      #0050ee 40%,
      #06f 88%,
      #06f 93%,
      #005bff 95%,
      #003dd7 96%,
      #003dd7
    );
    padding: 3px 5px;
    border-top: 1px solid #0831d9;
    border-left: 1px solid #0831d9;
    border-right: 1px solid #001ea0;
    border-top-left-radius: 8px;
    border-top-right-radius: 7px;
    font-size: 14px;
    text-shadow: 1px 1px #0f1089;
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: default;
  }

  .title-bar button {
    border: 1px solid #003c74;
    background: linear-gradient(180deg, #fff, #ecebe5 86%, #d8d0c4);
    border-radius: 3px;
    outline: none;
    cursor: pointer;
  }

  .title-bar button {
    min-width: 21px;
    min-height: 21px;
    margin-left: 2px;
    background-repeat: no-repeat;
    background-position: 50%;
    background-color: #0050ee;
    transition: background 0.1s;
    border: none;
    padding: 0;
    float: right;
  }

  .title-bar img {
    height: 18px;
    transform: translateY(3px);
  }

  .menu-bar {
    height: 21px;
    font-size: 14px;
    line-height: 20px;
    color: black;
    background-color: #e9eada;
    border-bottom: 1px solid #939498;
    width: calc(100% - 4px);
    margin: 0 2px;
  }

  .menu-bar span {
    display: inline-block;
    padding: 0 6px;
    cursor: pointer;
    border: 1px solid transparent;
  }

  .menu-bar span:hover {
    background-color: #99d1ff77;
    border-color: #99d1ff;
  }

  textarea {
    outline: none;
    width: calc(100% - 4px);
    height: calc(100% - 50px);
    margin: 0 2px;
    border: none;
    overflow: scroll;
    resize: none;
  }

  .taskbar {
    background-color: #245edc;
    background: linear-gradient(
        to bottom,
        #245edc 0%,
        #3f8cf3 9%,
        #245edc 18%,
        #245edc 92%,
        #1941a5 100%
      )
      center/cover no-repeat;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 32px;
  }

  .start-button {
    height: 100%;
    float: left;
    font-size: 22px;
    line-height: 22px;
    font-weight: bold;
    font-style: italic;
    background: radial-gradient(circle, #5eac56 0%, #3c873c 100%) center/cover
      no-repeat;
    box-shadow:
      0px 5px 10px #79ce71 inset,
      4px 0 8px #3f8cf3;
    padding: 2px 25px 6px 10px;
    text-shadow: 1px 1px 3px #222;
    border-radius: 0px 8px 8px 0px;
    margin-right: 16px;
    cursor: pointer;
  }

  .start-button img {
    height: 20px;
    filter: drop-shadow(1px 1px 1px #222);
    transform: translateY(4px);
  }

  .opened-tabs {
    width: calc(100% - 225px);
    float: left;
  }

  .open-tab {
    width: 150px;
    height: 26px;
    margin: 3px 0;
    float: left;
    background-color: #4892f7;
    background: url(btn1.png) no-repeat 0 0;
    border: 1px solid #306fd9;
    border-radius: 2px;
    font-family: calibri, monospace;
    font-size: 14px;
    line-height: 14px;
    padding: 8px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    word-wrap: break-word;
    cursor: pointer;
  }

  .open-tab:hover {
    background: url(btn2.png) no-repeat 0 0;
  }

  .open-tab.active {
    background: url(btn3.png) no-repeat 0 0;
  }

  .open-tab img {
    height: 18px;
    float: left;
    transform: translateY(-3px);
    margin-right: 5px;
  }

  .time {
    height: 100%;
    float: right;
    font-family: calibri, monospace;
    font-size: 14px;
    line-height: 14px;
    background: linear-gradient(
        to bottom,
        #1290e9 0%,
        #19b9f3 9%,
        #1290e9 18%,
        #1290e9 92%,
        #1941a5 100%
      )
      center/cover no-repeat;
    box-shadow:
      0px 5px 10px #14a5f0 inset,
      0px 5px 10px #333333;
    padding: 9px 15px 9px 25px;
    border-left: 1px solid #092e51;
    text-shadow: 1px 1px 2px #222;
    cursor: pointer;
    text-transform: uppercase;
  }

  @media screen and (max-width: 825px) {
    .open-tab:nth-child(3) {
      display: none;
    }
  }

  @media screen and (max-width: 675px) {
    .open-tab:nth-child(1) {
      display: none;
    }
  }

  @media screen and (max-width: 525px) {
    .open-tab:nth-child(2) {
      display: none;
    }
  }
</style>

<script>
  const time = document.querySelector(".time");
  if (time instanceof HTMLElement) {
    time.innerHTML = new Intl.DateTimeFormat("en-IN", {
      hour: "numeric",
      minute: "numeric",
      hour12: true,
    }).format(new Date());
    time.setAttribute(
      "title",
      new Intl.DateTimeFormat("en-IN", {
        hour: "numeric",
        minute: "numeric",
        hour12: true,
      }).format(new Date())
    );

    setInterval(() => {
      time.innerHTML = new Intl.DateTimeFormat("en-IN", {
        hour: "numeric",
        minute: "numeric",
        hour12: true,
      }).format(new Date());
      time.setAttribute(
        "title",
        new Intl.DateTimeFormat("en-IN", {
          hour: "numeric",
          minute: "numeric",
          hour12: true,
        }).format(new Date())
      );
    }, 60000);
  }

  const desktop = document.querySelector(".desktop");
  if (desktop instanceof HTMLElement) {
    desktop.addEventListener("click", function () {
      document.querySelectorAll(".icon").forEach((e) => {
        if (e instanceof HTMLElement) {
          e.classList.remove("selected");
        }
      });
    });
  }

  document.querySelectorAll(".icon").forEach((icon) => {
    if (icon instanceof HTMLElement) {
      icon.addEventListener("click", function () {
        setTimeout(() => {
          document.querySelectorAll(".icon").forEach((e) => {
            if (e instanceof HTMLElement) {
              e.classList.remove("selected");
            }
          });
        }, 2);
      });
    }
  });

  const maxBtn = document.querySelector(".max");
  const window = document.querySelector(".window");
  if (maxBtn instanceof HTMLElement && window instanceof HTMLElement) {
    maxBtn.addEventListener("click", () => {
      window.classList.toggle("maximized");
    });
  }

  const minBtn = document.querySelector(".min");
  const readme = document.querySelector(".readme");
  if (
    minBtn instanceof HTMLElement &&
    readme instanceof HTMLElement &&
    window instanceof HTMLElement
  ) {
    minBtn.addEventListener("click", () => {
      readme.classList.toggle("active");
      window.classList.toggle("minimized");
    });
  }

  if (readme instanceof HTMLElement && window instanceof HTMLElement) {
    readme.addEventListener("click", () => {
      readme.classList.toggle("active");
      window.classList.toggle("minimized");
    });
  }

  const closeBtn = document.querySelector(".cls");
  if (
    closeBtn instanceof HTMLElement &&
    readme instanceof HTMLElement &&
    window instanceof HTMLElement
  ) {
    closeBtn.addEventListener("click", () => {
      readme.style.display = "none";
      window.style.display = "none";
    });
  }

  const faisalAkhtar = document.querySelector(".faisal-akhtar");
  if (faisalAkhtar instanceof HTMLElement) {
    faisalAkhtar.addEventListener("dblclick", function (this: HTMLElement) {
      setTimeout(() => {
        if (this instanceof HTMLElement) {
          this.classList.remove("selected");
        }
      }, 2);
      globalThis.window.open("https://faisalakhtar.github.io/");
    });
  }

  const myComputer = document.querySelector(".my-computer");
  if (myComputer instanceof HTMLElement) {
    myComputer.addEventListener("dblclick", function (this: HTMLElement) {
      setTimeout(() => {
        if (this instanceof HTMLElement) {
          this.classList.remove("selected");
        }
      }, 2);
      globalThis.window.open("https://github.com/faisalAkhtar/");
    });
  }

  const myNetwork = document.querySelector(".my-network");
  if (myNetwork instanceof HTMLElement) {
    myNetwork.addEventListener("dblclick", function (this: HTMLElement) {
      setTimeout(() => {
        if (this instanceof HTMLElement) {
          this.classList.remove("selected");
        }
      }, 2);
      globalThis.window.open("https://twitter.com/faisallakhtarr/");
    });
  }

  const notePad = document.querySelector(".note-pad");
  if (
    notePad instanceof HTMLElement &&
    readme instanceof HTMLElement &&
    window instanceof HTMLElement
  ) {
    notePad.ondblclick = () => {
      setTimeout(() => {
        notePad.classList.remove("selected");
      }, 2);
      readme.style.display = "initial";
      window.style.display = "initial";
      readme.classList.add("active");
      window.classList.remove("minimized");
    };
  }

  const textarea = document.querySelector("textarea");
  if (textarea instanceof HTMLTextAreaElement) {
    textarea.value =
      "Hello World!\n\nFeatures:\n- Desktop icons are clickable. Double clicking them takes you to some of my links (github, twitter, portfolio).\n- Time in system-tray is your system's time.\n- This window is draggable, closable, minimizable and maximizable. Try it.\n- The opened tabs in taskbar also take you to my links, same as the icons.\n______________________________\n\nThe code is on github. Star the repository if you liked this. Contributions to this repository are welcome and appreciated.\n______________________________\n\nDo follow me on github (@faisalakhtar) and twitter(@faisallakhtarr). Open 'My Computer' and 'My Network' to go to these links.\n";
  }

  const windowElement = document.querySelector(".window");
  if (windowElement instanceof HTMLElement) {
    dragWindow(windowElement);
  }

  function dragWindow(elmnt: HTMLElement) {
    let pos1 = 0,
      pos2 = 0,
      pos3 = 0,
      pos4 = 0;

    const titleBar = document.querySelector(".title-bar");
    if (titleBar instanceof HTMLElement) {
      titleBar.addEventListener("mousedown", dragging);
    }

    function dragging(e: MouseEvent) {
      e = e || globalThis.window.event;
      e.preventDefault();
      pos3 = e.clientX;
      pos4 = e.clientY;
      document.addEventListener("mouseup", stopDragging);
      document.addEventListener("mousemove", draggedWindow);
    }

    function draggedWindow(e: MouseEvent) {
      e = e || globalThis.window.event;
      e.preventDefault();
      pos1 = pos3 - e.clientX;
      pos2 = pos4 - e.clientY;
      pos3 = e.clientX;
      pos4 = e.clientY;
      elmnt.style.top = elmnt.offsetTop - pos2 + "px";
      elmnt.style.left = elmnt.offsetLeft - pos1 + "px";
    }

    function stopDragging() {
      document.removeEventListener("mouseup", stopDragging);
      document.removeEventListener("mousemove", draggedWindow);
    }
  }
</script>
